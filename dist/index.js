import{fileURLToPath as K}from"url";import Y from"path";var Q=()=>K(import.meta.url),X=()=>Y.dirname(Q()),d=X();import{cac as Pt}from"cac";import v from"prompts";import E from"picocolors";var s=t=>{console.log(E.blue(t))},r=t=>{console.log(E.red(t))},D=t=>{console.log(E.green(t))},a=()=>{console.log()},x=t=>{console.log(t)};import B from"path";import{existsSync as vt}from"fs";import{lstatSync as Z,readdirSync as tt,promises as et,constants as it}from"fs";import rt from"path";var nt=["node_modules","favicon.ico"],F=t=>!t||typeof t!="string"?(r("An App name must be provided and it should be a string"),!1):t.length?t.match(/^\./)?(r("App name cannot start with a period"),!1):t.match(/^_/)?(r("App name cannot start with an underscore"),!1):t.trim()!==t?(r("name cannot contain leading or trailing spaces"),!1):(nt.forEach(function(e){if(t.toLowerCase()===e)return r(e+" is a blacklisted name"),!1}),/[~'!()*%&]/.test(t.split("/").slice(-1)[0])?(r(`name can no longer contain special characters ("~'!()*%&")`),!1):!0):(r("App name must be greate than zero"),!1),R=(t,e)=>{let i=tt(t);if(i.length>0){s(`The directory ${e} contains file that could conflict:`),a();for(let n of i)try{Z(rt.join(t,n)).isDirectory()?s(`  ${n}`):x(`  ${n}`)}catch{x(`  ${n}`)}return a(),s("Either try using a new directory name, or remove the files listed above."),a(),!1}return!0};async function L(t){try{return await et.access(t,it.W_OK),!0}catch{return!1}}import U,{dirname as ht}from"path";import{mkdirSync as wt}from"fs";import w from"path";import{statSync as Rt,promises as _}from"fs";import h from"path";import ot from"fast-glob";import{fileURLToPath as Nt}from"url";import Wt from"cross-spawn";var st=t=>t,G=async(t,e,{cwd:i,rename:n=st}={})=>{let c=typeof t=="string"?[t]:t;if(c.length===0||!e)throw new TypeError("`src` and `dest` are required");let g=await ot.async(c,{cwd:i,dot:!0,absolute:!1,stats:!1}),o=i?h.resolve(i,e):e;return Promise.all(g.map(async l=>{let m=h.dirname(l),f=n(h.basename(l)),k=i?h.resolve(i,l):l,j=h.join(o,m,f);return await _.mkdir(h.dirname(j),{recursive:!0}),_.copyFile(k,j)}))};import at from"node:os";import N from"picocolors";import ct from"ora";import{Sema as lt}from"async-sema";import pt from"fast-glob";import{stat as mt,writeFile as b,readFile as A}from"fs/promises";var O=async({appName:t,root:e,template:i,packageManager:n,alias:c})=>{s(`Using ${n}`),a(),s(`Initializing project with template: ${i}
`);let g=ct("Pulling template").start(),o=w.join(d,i),l=["**"];i==="normal"&&l.push("!tailwind.config.js","!postcss.config.js");try{await G(l,e,{cwd:o,rename(p){switch(p){case"gitignore":case"eslintrc.cjs":return`.${p}`;case"README-template.md":return"README.md";default:return p}}}),g.succeed("Succeed to pull template to local")}catch{g.fail("Fail to pull template to local, please try again!"),process.exit(1)}if(c!=="@/*"){let p=w.join(e,"tsconfig.json");await b(p,(await A(p,"utf8")).replace('"@/*"',`"${c}"`));let S=w.join(e,"vite.config.ts"),q=c.replace("/*","");await b(S,(await A(S,"utf8")).replace("~",`${q}`));let C=await pt.async("**/*",{cwd:e,dot:!0,stats:!1,ignore:["tsconfig.json",".git/**/*"]}),M=new lt(8,{capacity:C.length});await Promise.all(C.map(async H=>{await M.acquire();let $=w.join(e,H);(await mt($)).isFile()&&await b($,(await A($,"utf8")).replace("@/",`${c.replace(/\*/g,"")}`)),M.release()}))}let f={name:t,version:"1.0.0",private:!0,type:"module",scripts:{dev:"vite",build:"tsc && vite build",lint:"eslint --fix . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",preview:"vite preview",prepare:"husky"},dependencies:{axios:"^1.7.2",react:"^18.3.1","react-dom":"^18.3.1","react-router":"^6.23.1","react-router-dom":"^6.23.1"},devDependencies:{"@types/node":"^20.12.13","@types/react":"^18.3.3","@types/react-dom":"^18.3.0","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vitejs/plugin-react":"^4.3.0",eslint:"^8.57.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.1.3","eslint-plugin-react-hooks":"^4.6.2","eslint-plugin-react-refresh":"^0.4.7",husky:"^9.0.11",prettier:"3.2.5",typescript:"^5.4.5",vite:"^5.2.12"}};i==="tailwind"&&(f.devDependencies={...f.devDependencies,autoprefixer:"^10.4.19",postcss:"^8.4.38","prettier-plugin-tailwindcss":"^0.5.14",tailwindcss:"^3.4.3"}),await b(w.join(e,"package.json"),JSON.stringify(f,null,2)+at.EOL),s(`
Installing dependencies:`);for(let p in f.dependencies)console.log(`- ${N.cyan(p)}`);s(`
Installing devDependencies:`);for(let p in f.devDependencies)console.log(`- ${N.cyan(p)}`);a();let k=w.join(e,"index.html"),j=await A(k,"utf-8"),J=t.replace(/^(.)/,p=>p.toUpperCase());await b(k,j.replace("ViteReactTemplate",J))};import{execSync as u}from"child_process";import{rmSync as ft}from"fs";import dt from"path";var gt=()=>{try{return u("git rev-parse --is-inside-work-tree",{stdio:"ignore"}),!0}catch{return!1}},ut=()=>{try{return u("hg --cwd . root",{stdio:"ignore"}),!0}catch{return!1}},yt=()=>{try{return u("git config init.defaultBranch",{stdio:"ignore"}),!0}catch{return!1}},W=t=>{let e=!1;try{return u("git --version",{stdio:"ignore"}),gt()||ut()?!1:(u("git init",{stdio:"ignore"}),yt()||u("git checkout -b main",{stdio:"ignore"}),u("git add -A",{stdio:"ignore"}),u('git commit -m "Initial commit from chaos"',{stdio:"ignore"}),!0)}catch{if(e)try{ft(dt.join(t,".git"),{recursive:!0,force:!0})}catch{}return!1}};var z=async({projectPath:t,useTailwind:e,packageManager:i,initGit:n,alias:c})=>{let g=e?"tailwind":"normal",o=U.resolve(t);await L(ht(o))||(r("The application path is not writable, please check folder permissions and try again."),r("It is likely you do not have write permissions for this folder."),process.exit(1));let l=U.basename(o);wt(o,{recursive:!0});let m=process.cwd();D(`Creating a new vite app in ${o}.`),a(),process.chdir(o),await O({appName:l,root:o,template:g,packageManager:i,alias:c}),n&&W(o)&&(s("Initialized a git repository."),a()),D(`Project ${l} set up successfully`),a(),x("Inside that directory, you can run several commands:"),s(`  ${i} dev to start the development server.`),a(),s(`  ${i} build to build the App for production.`),a()};var P=t=>{r(`Command cancelled when setting ${t.name}`),process.exit(1)},xt=t=>{let e=B.resolve(t.trim()),i=B.basename(e);return vt(e)&&!R(e,i)&&process.exit(1),e};async function T(t,{tailwind:e}){let i={projectName:t,useTailwind:e,initGit:!0,alias:"@/*"};if(!t){let{project:m}=await v({type:"text",name:"project",message:"Your project name:",initial:"ViteReactTemplate"},{onCancel:P});i.projectName=m}let n=xt(i.projectName);F(i.projectName)||process.exit(1);let{packageManager:c}=await v({type:"select",name:"packageManager",message:"Which package manager would you like to use?",choices:[{title:"NPM",value:"npm"},{title:"YARN",value:"yarn"},{title:"PNPM",value:"pnpm"}]});if(!e){let{tailwind:m}=await v({type:"toggle",name:"tailwind",message:"Would you like to use tailwindcss?",initial:!0,active:"yes",inactive:"no"},{onCancel:P});i.useTailwind=m}let{useAlias:g}=await v({type:"toggle",name:"useAlias",message:"Would you like to use import alias?",initial:!0,active:"yes",inactive:"no"},{onCancel:P}),o=/^[^*"]+\/\*\s*$/;if(g){let{alias:m}=await v({type:"text",name:"alias",message:"What import alias do you want:",initial:"@/*",validate:f=>o.test(f)?!0:"Import alias must follow the pattern <prefix>/*"},{onCancel:P});i.alias=m}let{initGit:l}=await v({type:"toggle",name:"initGit",message:"Would you like to init a git repo?",initial:!0,active:"yes",inactive:"no"},{onCancel:P});i.initGit=l;try{await z({...i,packageManager:c,projectPath:n})}catch(m){console.log(m),r("crashed when downloading packages, please try again")}}var V={name:"chaos-template-cli",version:"1.3.0",description:"",main:"src/cli.ts",scripts:{start:"tsup src/cli.ts --watch",build:"tsup-node --minify",test:"echo 'no test specified'",prepare:"husky"},bin:{chaos:"dist/index.js"},files:["dist"],keywords:[],author:"chaosspace",type:"module",license:"ISC",dependencies:{"async-sema":"^3.1.1",cac:"^6.7.14","cross-spawn":"^7.0.3","fast-glob":"^3.3.2","locate-path":"^7.2.0",ora:"^8.0.1",picocolors:"^1.0.0",prompts:"^2.4.2",tsup:"^8.0.2"},devDependencies:{"@types/cross-spawn":"^6.0.6","@types/node":"^20.12.10","@types/prompts":"^2.4.9",husky:"^9.0.11",typescript:"^5.4.5"}};var I=Pt();I.version(V.version);I.command("[projectName]","create project from template").option("-t, --tailwind","use tailwindcss").action(async(t,e)=>{await T(t,e)});I.help();I.parse();
