import{fileURLToPath as q}from"url";import z from"path";var B=()=>q(import.meta.url),K=()=>z.dirname(B()),g=K();import{cac as ge}from"cac";import h from"prompts";import $ from"picocolors";var p=e=>{console.log($.blue(e))},s=e=>{console.log($.red(e))},A=e=>{console.log($.green(e))},m=()=>{console.log()},v=e=>{console.log(e)};import G from"path";import{existsSync as me}from"fs";import{lstatSync as Y,readdirSync as H,promises as Q,constants as X}from"fs";import Z from"path";var ee=["node_modules","favicon.ico"],I=e=>!e||typeof e!="string"?(s("An App name must be provided and it should be a string"),!1):e.length?e.match(/^\./)?(s("App name cannot start with a period"),!1):e.match(/^_/)?(s("App name cannot start with an underscore"),!1):e.trim()!==e?(s("name cannot contain leading or trailing spaces"),!1):(ee.forEach(function(t){if(e.toLowerCase()===t)return s(t+" is a blacklisted name"),!1}),/[~'!()*%&]/.test(e.split("/").slice(-1)[0])?(s(`name can no longer contain special characters ("~'!()*%&")`),!1):!0):(s("App name must be greate than zero"),!1),S=(e,t)=>{let i=H(e);if(i.length>0){p(`The directory ${t} contains file that could conflict:`),m();for(let n of i)try{Y(Z.join(e,n)).isDirectory()?p(`  ${n}`):v(`  ${n}`)}catch{v(`  ${n}`)}return m(),p("Either try using a new directory name, or remove the files listed above."),m(),!1}return!0};async function F(e){try{return await Q.access(e,X.W_OK),!0}catch{return!1}}import R,{dirname as le}from"path";import{mkdirSync as pe}from"fs";import b from"path";import{statSync as Ee,promises as M}from"fs";import y from"path";import te from"fast-glob";import{fileURLToPath as Ie}from"url";import ie from"cross-spawn";var ne=e=>e,L=async(e,t,{cwd:i,rename:n=ne}={})=>{let o=typeof e=="string"?[e]:e;if(o.length===0||!t)throw new TypeError("`src` and `dest` are required");let r=await te.async(o,{cwd:i,dot:!0,absolute:!1,stats:!1}),a=i?y.resolve(i,t):t;return Promise.all(r.map(async c=>{let f=y.dirname(c),d=n(y.basename(c)),l=i?y.resolve(i,c):c,w=y.join(a,f,d);return await M.mkdir(y.dirname(w),{recursive:!0}),M.copyFile(l,w)}))},_=async e=>{let t=[e==="yarn"?"":"install"];return new Promise((i,n)=>{let o=ie(e,t,{stdio:"inherit",env:{...process.env,ADBLOCK:"1",NODE_ENV:"development",DISABLE_OPENCOLLECTIVE:"1"}});o.stdout?.on("data",r=>{console.log(r)}),o.on("close",r=>{if(r!==0){n({command:`${e} ${t.join(" ")}`});return}i()})})};import oe from"node:os";import N from"picocolors";import se from"ora";import{Sema as re}from"async-sema";import ae from"fast-glob";import{stat as ce,writeFile as P,readFile as E}from"fs/promises";var O=async({appName:e,root:t,template:i,packageManager:n,alias:o})=>{p(`Using ${n}`),m(),p(`Initializing project with template: ${i}
`);let r=se("Pulling template").start(),a=b.join(g,i),c=["**"];i==="normal"&&c.push("!tailwind.config.js","!postcss.config.js");try{await L(c,t,{cwd:a,rename(l){switch(l){case"gitignore":case"eslintrc.cjs":return`.${l}`;case"README-template.md":return"README.md";default:return l}}}),r.succeed("Succeed to pull template to local")}catch{r.fail("Fail to pull template to local, please try again!"),process.exit(1)}if(o!=="@/*"){let l=b.join(t,"tsconfig.json");await P(l,(await E(l,"utf8")).replace('"@/*"',`"${o}"`));let w=b.join(t,"vite.config.ts"),J=o.replace("/*","");await P(w,(await E(w,"utf8")).replace("@/",`${J}`));let T=await ae.async("**/*",{cwd:t,dot:!0,stats:!1,ignore:["tsconfig.json",".git/**/*"]}),C=new re(8,{capacity:T.length});await Promise.all(T.map(async V=>{await C.acquire();let k=b.join(t,V);(await ce(k)).isFile()&&await P(k,(await E(k,"utf8")).replace("@/",`${o.replace(/\*/g,"")}`)),C.release()}))}let d={name:e,version:"1.0.0",private:!0,type:"module",scripts:{dev:"vite",build:"tsc && vite build",lint:"eslint --fix . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",preview:"vite preview",prepare:"husky"},dependencies:{axios:"^1.7.2",react:"^18.3.1","react-dom":"^18.3.1","react-router":"^6.23.1","react-router-dom":"^6.23.1"},devDependencies:{"@types/node":"^20.12.13","@types/react":"^18.3.3","@types/react-dom":"^18.3.0","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vitejs/plugin-react":"^4.3.0",eslint:"^8.57.0","eslint-config-prettier":"^9.1.0","eslint-plugin-prettier":"^5.1.3","eslint-plugin-react-hooks":"^4.6.2","eslint-plugin-react-refresh":"^0.4.7",husky:"^9.0.11",prettier:"3.2.5",typescript:"^5.4.5",vite:"^5.2.12"}};i==="tailwind"&&(d.devDependencies={...d.devDependencies,autoprefixer:"^10.4.19",postcss:"^8.4.38","prettier-plugin-tailwindcss":"^0.5.14",tailwindcss:"^3.4.3"}),await P(b.join(t,"package.json"),JSON.stringify(d,null,2)+oe.EOL),p(`
Installing dependencies:`);for(let l in d.dependencies)console.log(`- ${N.cyan(l)}`);p(`
Installing devDependencies:`);for(let l in d.devDependencies)console.log(`- ${N.cyan(l)}`);m(),await _(n)};var W=async({projectPath:e,useTailwind:t,packageManager:i,initGit:n,alias:o})=>{let r=t?"tailwind":"normal",a=R.resolve(e);await F(le(a))||(s("The application path is not writable, please check folder permissions and try again."),s("It is likely you do not have write permissions for this folder."),process.exit(1));let c=R.basename(a);pe(a,{recursive:!0});let f=process.cwd();A(`Creating a new vite app in ${a}.`),m(),process.chdir(a),await O({appName:c,root:a,template:r,packageManager:i,alias:o}),A(`Project ${c} set up successfully`),m(),v("Inside that directory, you can run several commands:"),p(`  ${i} dev to start the development server.`),m(),p(`  ${i} build to build the App for production.`),m()};var x=e=>{s(`Command cancelled when setting ${e.name}`),process.exit(1)},fe=e=>{let t=G.resolve(e.trim()),i=G.basename(t);return me(t)&&!S(t,i)&&process.exit(1),t};async function D(e,{tailwind:t}){let i={projectName:e,useTailwind:t,initGit:!0,alias:"@/*"};if(!e){let{project:f}=await h({type:"text",name:"project",message:"Your project name:",initial:"ViteReactTemplate"},{onCancel:x});i.projectName=f}let{packageManager:n}=await h({type:"select",name:"packageManager",message:"Which package manager would you like to use?",choices:[{title:"NPM",value:"npm"},{title:"YARN",value:"yarn"},{title:"PNPM",value:"pnpm"}]});if(I(i.projectName)||process.exit(1),!t){let{tailwind:f}=await h({type:"toggle",name:"tailwind",message:"Would you like to use tailwindcss?",initial:!0,active:"yes",inactive:"no"},{onCancel:x});i.useTailwind=f}let{useAlias:o}=await h({type:"toggle",name:"useAlias",message:"Would you like to use import alias?",initial:!0,active:"yes",inactive:"no"},{onCancel:x}),r=/^[^*"]+\/\*\s*$/;if(o){let{alias:f}=await h({type:"text",name:"alias",message:"What import alias do you want:",initial:"@/*",validate:d=>r.test(d)?!0:"Import alias must follow the pattern <prefix>/*"},{onCancel:x});i.alias=f}let{initGit:a}=await h({type:"toggle",name:"initGit",message:"Would you like to init a git repo?",initial:!0,active:"yes",inactive:"no"},{onCancel:x});i.initGit=a;let c=fe(i.projectName);try{await W({...i,packageManager:n,projectPath:c})}catch(f){console.log(f),s("crashed when downloading packages, please try again")}}var U={name:"chaos-template-cli",version:"1.2.7",description:"",main:"src/cli.ts",scripts:{start:"tsup src/cli.ts --watch",build:"tsup-node --minify",test:"echo 'no test specified'",prepare:"husky"},bin:{chaos:"dist/index.js"},files:["dist"],keywords:[],author:"chaosspace",type:"module",license:"ISC",dependencies:{"async-sema":"^3.1.1",cac:"^6.7.14","cross-spawn":"^7.0.3","fast-glob":"^3.3.2","locate-path":"^7.2.0",ora:"^8.0.1",picocolors:"^1.0.0",prompts:"^2.4.2",tsup:"^8.0.2"},devDependencies:{"@types/cross-spawn":"^6.0.6","@types/node":"^20.12.10","@types/prompts":"^2.4.9",husky:"^9.0.11",typescript:"^5.4.5"}};var j=ge();j.version(U.version);j.command("[projectName]","create project from template").option("-t, --tailwind","use tailwindcss").action(async(e,t)=>{await D(e,t)});j.help();j.parse();
